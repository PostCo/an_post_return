# AnPost API Ruby Gem PRD

## Overview
The AnPost API Ruby gem provides a simple interface to interact with An Post's API services for return label creation and tracking information retrieval. The gem should support both production and test environments.

## Core Requirements

### Configuration
- Simple configuration system with only test/production environment toggle
- No API key/secret management (authentication handled via subscription key in requests)
- Base URL determined by environment:
  - Test: https://apim-anpost-mailslabels-nonprod.dev-anpost.com/returnsapi-q/v2/
  - Production: https://apim-anpost-mailslabels.anpost.com/returnsapi/v2/

### API Client
- Clean, minimal HTTP client implementation using Faraday
- Default JSON headers
- Subscription key passed per-request, not in configuration
- Proper error handling for API responses
- No persistent authentication required

### Resources
1. Return Label Resource
   - Create return labels with subscription key authentication
   - Handle all necessary parameters for label creation
   - Support JSON request/response formats

2. Tracking Resource
   - Retrieve tracking information via SFTP
   - SFTP credentials provided per-request, not in configuration
   - Support file download and parsing

## Technical Requirements
- Ruby >= 3.0.0
- Faraday for HTTP requests
- net-sftp for SFTP operations
- JSON for data handling
- Proper error classes and handling
- Comprehensive test coverage
- Standard Ruby code style

## Implementation Notes
- Keep configuration minimal and focused
- Move authentication to request level
- Support environment-based URL switching
- Handle errors gracefully with descriptive messages
- Follow Ruby gem best practices

## Implementation Guidelines

### 1. Code Structure
```
lib/
  anpost/
    version.rb
    configuration.rb
    client.rb
    resources/
      return_label.rb
      tracking.rb
    errors.rb
    sftp/
      client.rb
      tracking_parser.rb
```

### 2. Class Responsibilities
- Configuration: Handle gem configuration
- Client: Main interface to the gem
- ReturnLabel: Handle return label API requests
- Tracking: Manage SFTP tracking file retrieval and parsing
- SFTPClient: Handle SFTP connections and file operations
- TrackingParser: Parse tracking file contents

### 3. Error Classes
- AnPost::Error: Base error class
- AnPost::ConfigurationError: Configuration-related errors
- AnPost::APIError: API-related errors
- AnPost::SFTPError: SFTP-related errors
- AnPost::ParsingError: File parsing errors

## Delivery Requirements

### 1. Phase 1: Basic Setup
- Project structure
- Configuration implementation
- Basic error classes
- Initial documentation

### 2. Phase 2: Return Label Implementation
- Return label API integration
- Error handling
- Tests and documentation

### 3. Phase 3: Tracking Implementation
- SFTP client integration
- Tracking parser implementation
- Tests and documentation

### 4. Phase 4: Finalization
- Complete documentation
- Example implementations
- Final testing and bug fixes 